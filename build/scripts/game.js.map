{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/Constants.js",
    "src/SpriteConstants.js",
    "src/index.js",
    "src/objects/BackgroundLayer.js",
    "src/objects/Boomerang.js",
    "src/objects/Chandelier.js",
    "src/objects/ChandelierLayer.js",
    "src/objects/Character.js",
    "src/objects/Enemy.js",
    "src/objects/EnemyGroup.js",
    "src/objects/Room.js",
    "src/states/Commands.js",
    "src/states/Game.js",
    "src/states/LoseState.js",
    "src/states/Menu.js",
    "src/states/WinState.js",
    "src/utils.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const SpriteWidth = 32;\nexport const SpriteHeight = 32;\nexport const SpriteRatioX = SpriteWidth/64;\nexport const SpriteRatioY = SpriteHeight/64;\n\nexport const ScreenWidth = 800;\nexport const ScreenHeight = 600;\n\nexport const CameraVelocity = 20;\n\nexport const FlashColor = 0x555555;\nexport const FlashDuration = 1000;\nexport const ShakeIntensity = 0.002;\nexport const ShakeDuration = 200;\n\nexport const Border = 256;\n\nexport const CharacterWitdh = 66;\nexport const CharacterHeight = 54;\n\nexport const EnemyWidth = 55;\nexport const EnemyHeight = 60;\n\nexport const BoomerangWidth = 30;\nexport const BoomerangHeight = 30;\nexport const RatioSize = 1/3;\n\nexport const MinEnemies = 20;\nexport const MaxEnemies = 40;\n\nexport const DirectionBoomerang = {\n  left: \"LEFT\",\n  up: \"UP\",\n  down: \"DOWN\",\n  right: \"RIGHT\"\n};",
    "export const LD = \"ld\";\nexport const Wall = \"wall\"; //http://bevouliin.com/\nexport const SpritePlayer = \"player\";\nexport const SpriteEnemy = \"enemy\";\nexport const SpriteEnemy2 = \"enemy2\";\nexport const SpriteEnemy3 = \"enemy3\";\nexport const SpriteBullet = \"bullet\";\nexport const BoomerangSprite = \"boomerang\";\nexport const DeathSound = \"deathSound\";\nexport const Background = \"background\";\nexport const LightSprite = \"lightSprite\";\n\n",
    "import { ScreenWidth, ScreenHeight } from \"./Constants.js\";\nimport Game from 'states/Game';\nimport Commands from 'states/Commands';\nimport Menu from 'states/Menu';\nimport WinState from 'states/WinState';\nimport LoseState from 'states/LoseState';\n\nclass LD37 extends Phaser.Game {\n\n  constructor() {\n    super(ScreenWidth, ScreenHeight, Phaser.AUTO, 'content', null);\n    this.state.add('Game', Game, false);\n    this.state.add('Menu', Menu, false);\n    this.state.add('Win', WinState, false);\n    this.state.add('Lose', LoseState, false);\n    this.state.add('Commands', Commands, false);\n    this.state.start('Menu');\n  }\n\n  goToCommands() {\n    this.state.start('Commands');\n  }\n\n  goToGame() {\n    this.state.start('Game', Phaser.Plugin.StateTransition.Out.SlideBottom, null, true, true);\n  }\n\n  goToLose() {\n    this.state.start('Lose', null, Phaser.Plugin.StateTransition.Out.SlideLeft, null, true);\n  }\n\n  goToWin() {\n    this.state.start('Win', Phaser.Plugin.StateTransition.Out.SlideRight, null, true, true);\n  }\n\n}\n\nnew LD37();\n",
    "import { SpriteWidth, SpriteHeight } from \"../Constants.js\";\nimport { Background, BoomerangSprite } from \"../SpriteConstants\";\n\nclass BackgroundLayer extends Phaser.Group {\n\n  constructor(game, x, y, borders, parent, name) {\n    super(game, parent, name, false, true, Phaser.Physics.ARCADE);\n    // console.log(x)\n    // console.log(y)\n    // console.log(borders)\n    const xOnGrid = x - x % SpriteWidth; \n    const yOnGrid = y - y % SpriteHeight;\n    this.fillBackground(borders, xOnGrid, yOnGrid);\n   }\n\n  createBackground(x, y) {\n    let sprite = this.create(x,y, Background);\n    sprite.body.immovable = true;\n  }\n\n  fillBackground(borders, xOrigin, yOrigin) {\n    let stack = [];\n    const hasBorder = (x,y) => {\n      const element = borders.find(tile => {return tile.position.x === x && tile.position.y === y; });\n      return element;\n    };\n\n    if(hasBorder(xOrigin, yOrigin)) {\n      return null;\n    }\n    stack.push({x: xOrigin, y: yOrigin});\n    while(stack.length != 0) {\n      const coord = stack.pop();\n      this.createBackground(coord.x, coord.y);\n      if(!hasBorder(coord.x, coord.y - SpriteHeight)) {\n        stack.push({x: coord.x, y: coord.y - SpriteHeight});\n      }\n      if(!hasBorder(coord.x, coord.y + SpriteHeight)) {\n        stack.push({x: coord.x, y: coord.y + SpriteHeight});\n      }\n      if(!hasBorder(coord.x - SpriteWidth, coord.y)) {\n        stack.push({x: coord.x - SpriteWidth, y: coord.y});\n      }\n      if(!hasBorder(coord.x + SpriteWidth, coord.y)) {\n        stack.push({x: coord.x + SpriteWidth, y: coord.y});\n      }\n    }\n  }\n\n    // fillBackground(x,y, borders) {\n  //   const hasBorder = (x,y) => {\n  //     const element = borders.find(tile => {return tile.position.x === x && tile.position.y === y; });\n  //     return element;\n  //   };\n\n  //   if(x < 512 || x > 650 || y < 512 || y > 650) {\n  //     return null;\n  //   }\n  //   if(!hasBorder()) {\n  //     this.createBackground(x,y);\n  //     //this.fillBackground(x, y - SpriteHeight, borders);\n  //     this.fillBackground(x, y + SpriteHeight, borders);\n  //     this.fillBackground(x + SpriteWidth, y, borders);\n  //     //this.fillBackground(x - SpriteWidth, y, borders);\n  //   }\n  // }\n}\n\nexport default BackgroundLayer;",
    "import { BoomerangSprite, SpriteBullet } from \"../SpriteConstants\";\nimport { BoomerangWidth, BoomerangHeight, DirectionBoomerang, RatioSize } from \"../Constants\";\n\nconst Duration = 1500;\nconst DurationRotation = 250;\nconst Strengh = 600\n\n\nclass Boomerang extends Phaser.Sprite {\n\n  constructor(game, x, y) {\n    super(game, x, y, BoomerangSprite, 0);\n    game.physics.arcade.enable(this);\n    this.body.immovable = true;\n    this.anchor.setTo(0.5, 0.5);\n    this.scale.setTo(RatioSize, RatioSize);\n  }\n\n  startMove() {\n    this.body.immovable = false;\n  }\n\n  isMoving() {\n    return !this.body.immovable;\n  }\n\n  launch(direction, onCompleteFunction) {\n    this.startMove();\n    let movement = {};\n    switch(direction) {\n      case DirectionBoomerang.left:\n        movement = {x: this.position.x - Strengh};\n      break;\n      case DirectionBoomerang.right:\n        movement = {x: this.position.x + Strengh};\n      break;\n      case DirectionBoomerang.down:\n        movement = {y: this.position.y + Strengh};\n      break;\n      case DirectionBoomerang.up:\n        movement = {y: this.position.y - Strengh};\n      break;\n    }\n    let launchTween = this.game.add.tween(this).to(movement, Duration, Phaser.Easing.Linear.None, true,0,0,true);\n    let tweenRotation = this.game.add.tween(this).to( { angle: 360 }, DurationRotation, Phaser.Easing.Linear.None, true);\n    tweenRotation.repeat(100, 1);\n    launchTween.onComplete.add(onCompleteFunction);\n  }\n\n}\n\nexport default Boomerang;",
    "import { LightSprite } from \"../SpriteConstants\";\n\nclass Chandelier extends Phaser.Group {\n\n  constructor(game, x, y, parent, name) {\n    super(game, parent, name);\n\n    for(let i = 0; i < 9; i++) {\n      this.createLight();\n    }\n    this.align(3, -1, 48, 48);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  createLight() {\n    let sprite = this.create(0,0, LightSprite);\n    sprite.alpha = 0.4;\n  }\n\n}\n\nexport default Chandelier;",
    "import { getRandomArbitrary } from \"utils\";\nimport { SpriteWidth, SpriteHeight, Border } from \"Constants\";\n\nimport Chandelier from \"objects/Chandelier\";\n\nconst MaxChandelier = 5;\n\n\nclass ChandelierLayer extends Phaser.Group {\n\n  constructor(game, parent, name) {\n    super(game, parent, name);\n    const nbChandelier = getRandomArbitrary(0, MaxChandelier);\n    for(let i = 0; i < nbChandelier; i++) {\n      const x = getRandomArbitrary(2 * Border, game.world.bounds.width - SpriteWidth - 2 * Border);\n      const y = getRandomArbitrary(2 * Border, game.world.bounds.height - SpriteHeight - 2 * Border);\n      this.addChandelier(x,y);\n    }\n  }\n\n  addChandelier(x, y) {\n    const chandelier = new Chandelier(this.game, x, y);\n    this.add(chandelier);\n  }\n\n  clear() {\n    this.children.forEach(chandelier => {\n      this.remove(chandelier);\n    });\n  }\n\n}\n\nexport default ChandelierLayer;",
    "import { SpritePlayer, SpriteBullet } from \"../SpriteConstants\";\nimport { CharacterWitdh, CharacterHeight, DirectionBoomerang } from \"../Constants\";\n\nconst Damage = 10;\nconst Velocity = 200;\nconst MaxBullet = 5;\nconst TimeLapse = 10;\n\nclass Character extends Phaser.Sprite {\n\n  constructor(game, x, y, key, frame) {\n    super(game, x, y, SpritePlayer, frame);\n    game.physics.arcade.enable(this);\n    //this.body.gravity.y = 500;\n    this.body.bounce.x = this.body.bounce.y = 0;\n    this.body.mass = 1;\n    this.direction = 1;\n    this.anchor.setTo(0.5, 0.5);\n    this.life = 1000;\n\n    const fire = [8, 9, 10, 11];\n    const walk = [0, 1, 2, 3, 4, 5, 6, 7];\n    const slide = [12, 13, 14, 15, 14, 13, 12];\n\n    this.animations.add('walk', walk, TimeLapse, false);\n    this.animations.add('slide', slide, TimeLapse, false);\n    this.animations.add('fire', fire, TimeLapse * 6, false);\n\n    this.weapon = game.add.weapon(MaxBullet, SpriteBullet);\n    this.weapon.bulletKillType = Phaser.Weapon.KILL_WORLD_BOUNDS;\n    this.weapon.bulletAngleOffset = 90;\n    //this.weapon.addBulletAnimation(\"fire\", fire, TimeLapse, true);\n    this.weapon.bulletAngleVariance = 5;\n    this.weapon.bulletSpeed = 400;\n    this.weapon.fireRate = 500;\n\n    this.weapon.trackSprite(this, 30, 20, true);\n    this.cursor = game.input.keyboard.createCursorKeys();\n    this.fireButton = game.input.keyboard.addKey(Phaser.KeyCode.SPACEBAR);\n    this.fireClick = game.input.activePointer.leftButton;\n    this.lastDirection = null;\n  }\n\n  update() {\n    this.body.velocity.x = 0;\n    this.body.velocity.y = 0;\n    this.rotation = this.game.physics.arcade.angleToPointer(this);\n    let move = null;\n    //console.log(this.angle)\n\n    if (this.cursor.left.isDown) {\n        this.body.velocity.x = -Velocity;\n        this.direction = -1;\n        this.lastDirection = DirectionBoomerang.left;\n        move = \"left\";\n    }\n    else if (this.cursor.right.isDown) {\n        this.body.velocity.x = Velocity;\n        this.direction = 1;\n        this.lastDirection = DirectionBoomerang.right;\n        move = \"right\";\n    }\n\n    if (this.cursor.up.isDown) {\n      this.body.velocity.y = -Velocity;\n      this.lastDirection = DirectionBoomerang.up;\n      move = \"up\";\n    } else if (this.cursor.down.isDown) {\n      this.body.velocity.y = Velocity;\n      this.lastDirection = DirectionBoomerang.down;\n      move = \"down\";\n    }\n\n    if(this.fireButton.isDown || this.fireClick.isDown) {\n      this.weapon.fire();\n      this.animations.play(\"fire\");\n    }\n    this.anim(move);\n  }\n\n  anim(move) {\n    const angle = this.angle;\n    if(move === \"left\") {\n      if((angle < - 90 + 10 && angle > -90 - 10) || (angle > 90 - 10 && angle < 90 + 10)) {\n        this.animations.play(\"slide\");\n      } else {\n        this.animations.play(\"walk\");\n      }\n    }\n\n    if(move === \"right\") {\n      if((angle < - 90 + 10 && angle > - 90 - 10) || (angle > 90 - 10 && angle < 90 + 10)) {\n        this.animations.play(\"slide\");\n      } else {\n        this.animations.play(\"walk\");\n      }\n    }\n\n    if(move === \"up\") {\n      if((angle > - 10 && angle < 10) || (angle > - 180 + 10 && angle > 180 - 10)) {\n        this.animations.play(\"slide\");\n      } else {\n        this.animations.play(\"walk\");\n      }\n    }\n\n    if(move === \"down\") {\n      if((angle > - 10 && angle < 10) || (angle > - 180 + 10 && angle > 180 - 10)) {\n        this.animations.play(\"slide\");\n      } else {\n        this.animations.play(\"walk\");\n      }\n    }\n\n    if(!move) {\n      this.animations.stop(\"walk\");\n      this.animations.stop(\"slide\");\n    }\n  }\n\n  directionChoosed() {\n    return this.lastDirection;\n  }\n\n  damage() {\n    this.life = this.life - Damage;\n  }\n\n  isDeath() {\n    return this.life < 0;\n  }\n\n  isOutSideTheLevel(game) {\n    return this.body.position.x + CharacterWitdh < 0 ||\n           this.body.position.x > game.world.bounds.width ||\n           this.body.position.y < 0 ||\n           this.body.position.y + CharacterHeight > game.world.bounds.height;\n  }\n\n  bullets() {\n    return this.weapon.bullets;\n  }\n\n}\n\nexport default Character;",
    "import { CharacterWitdh, CharacterHeight, EnemyWidth, EnemyHeight } from \"../Constants\";\n\nconst VisionEnemy = 399;\nconst TimeLapse = 10;\n\nclass Enemy extends Phaser.Sprite {\n\n  constructor(game, x, y, vel, sprite) {\n    super(game, x, y, sprite, 0);\n    //Enable physics on the player\n    game.physics.arcade.enable(this);\n    this.body.bounce.x = this.body.bounce.y = 0;\n    this.body.collideWorldBounds = true;\n    this.body.mass = 10;\n    this.direction = 1;\n    this.vel = vel;\n    this.anchor.setTo(0.5, 0.5);\n    const walk = [0, 1, 2, 3, 4, 5, 6, 7];\n    this.animations.add('walk', walk, TimeLapse, true);\n  }\n\n  follow(playerPosition) {\n    this.body.velocity.x = 0;\n    this.body.velocity.y = 0;\n\n    const centerPlayerX = CharacterWitdh / 2;\n    const centerPLayerY = CharacterHeight / 2;\n    const centerEnemyX  = EnemyWidth / 2;\n    const centerEnemyY  = EnemyHeight / 2;\n\n    const targetAngle = this.game.math.angleBetween( this.x, this.y, playerPosition.x, playerPosition.y);\n    this.rotation = targetAngle - Math.PI / 2;\n    \n    if(playerPosition.x + centerPlayerX > this.body.position.x + centerEnemyX) {\n      this.body.velocity.x = this.vel;\n    } else if (playerPosition.x + centerPlayerX < this.body.position.x + centerEnemyX){\n      this.body.velocity.x = -this.vel;\n    }\n\n    if(playerPosition.y + centerPLayerY > this.body.position.y + centerEnemyY) {\n      this.body.velocity.y = this.vel;\n    } else if (playerPosition.y + centerPLayerY < this.body.position.y + centerEnemyY) {\n      this.body.velocity.y = -this.vel;\n    }\n    this.animations.play(\"walk\", TimeLapse);\n  }\n\n}\n\nexport default Enemy;",
    "import { EnemyWidth, EnemyHeight, Border, MinEnemies, MaxEnemies } from \"../Constants.js\";\nimport { getRandomArbitrary } from \"../utils\";\nimport { SpriteEnemy, SpriteEnemy2, SpriteEnemy3 } from \"../SpriteConstants\";\n\nimport Enemy from \"objects/Enemy\";\nconst VelocityMin = 50;\nconst VelocityMax = 100;\n\nclass EnemyGroup extends Phaser.Group {\n\n  constructor(game, parent, name) {\n    super(game, parent, name, false, true, Phaser.Physics.ARCADE);\n    let nbEnemies = getRandomArbitrary(MinEnemies, MaxEnemies);\n\n    let nbEnemiesOnSide = getRandomArbitrary(10, nbEnemies - 30);\n    this.enemyTop(game,nbEnemiesOnSide);\n\n    nbEnemies -= nbEnemiesOnSide;\n    nbEnemiesOnSide = getRandomArbitrary(10, nbEnemies - 20);\n    this.enemyLeft(game, nbEnemiesOnSide);\n\n    nbEnemies -= nbEnemiesOnSide;\n    nbEnemiesOnSide = getRandomArbitrary(10, nbEnemies - 10);\n    this.enemyBottom(game, nbEnemiesOnSide);\n\n    nbEnemies -= nbEnemiesOnSide;\n    this.enemyRight(game, nbEnemiesOnSide);\n\n  }\n\n  getElapsedX(game, nbEnemies) {\n    return (game.world.bounds.width - 2 * Border) / nbEnemies;\n  }\n\n  getElapsedY(game, nbEnemies) {\n    return (game.world.bounds.height - 2 * Border) / nbEnemies;\n  }\n\n  enemyBottom(game,nbEnemies) {\n    const elapsedX = this.getElapsedX(game, nbEnemies);\n    for(let i = 0; i < nbEnemies; i++) {\n      const randomY = getRandomArbitrary(game.world.bounds.height, game.world.bounds.height + Border);\n      this.addEnemy(game, Border + elapsedX * i, randomY);\n    }\n  }\n\n  enemyTop(game, nbEnemies) {\n    const elapsedX = this.getElapsedX(game, nbEnemies);\n    for(let i = 0; i < nbEnemies; i++) {\n      const randomY = getRandomArbitrary(-Border, 0);\n      this.addEnemy(game, Border + elapsedX * i, randomY);\n    }\n  }\n\n  enemyLeft(game, nbEnemies) {\n    const elapsedY = this.getElapsedY(game, nbEnemies);\n    for(let i = 0; i < nbEnemies; i++) {\n      const randomX = getRandomArbitrary(-Border, 0);\n      this.addEnemy(game, randomX, Border + elapsedY * i);\n    }\n  }\n\n  enemyRight(game, nbEnemies) {\n    const elapsedY = this.getElapsedY(game, nbEnemies);\n    for(let i = 0; i < nbEnemies; i++) {\n      const randomX = getRandomArbitrary(game.world.bounds.width , game.world.bounds.width + Border);\n      this.addEnemy(game, randomX, Border + elapsedY * i);\n    }\n  }\n\n  addEnemy(game, x, y) {\n    const spriteArray = [SpriteEnemy, SpriteEnemy2, SpriteEnemy3];\n    const spriteIndex = getRandomArbitrary(0, spriteArray.length);\n    const vel = getRandomArbitrary(VelocityMin, VelocityMax);\n    const enemy = new Enemy(game,x, y, vel, spriteArray[spriteIndex]);\n    this.add(enemy);\n  }\n\n  follow(playerPosition) {\n    this.children.forEach(enemy => {\n      enemy.follow(playerPosition);\n    });\n  }\n\n  hasEnemies() {\n    return this.total > 0;\n  }\n\n  render(game) {\n    this.children.forEach(enemy => {\n      game.debug.body(enemy);\n    });\n  }\n}\n\nexport default EnemyGroup;",
    "import { SpriteWidth, SpriteHeight, SpriteRatioX, SpriteRatioY } from \"../Constants.js\";\nimport { Wall, BoomerangSprite } from \"../SpriteConstants\";\nimport { getRandomArbitrary } from \"../utils\";\n\nconst Divisor = 15;\n\nclass Room extends Phaser.Group {\n\n  constructor(game, parent, name) {\n    super(game, parent, name, false, true, Phaser.Physics.ARCADE);\n    this.Bounds = game.world.bounds;\n  }\n\n  createRandomLine(x1, y1, x2, y2, division = 1, varX = 0, varY = 0) {\n    const middleX = (x1 + x2) / 2 + (varX * SpriteWidth);\n    const middleY = (y1 + y2) / 2 + (varY * SpriteHeight);\n\n    const middleXBefore = middleX - (middleX % SpriteWidth);\n    const middleXAfter =  middleX + (middleX % SpriteWidth);\n    const middleYBefore = middleY - (middleY % SpriteHeight);\n    const middleYAfter = middleY + (middleY % SpriteHeight);\n    if(division > 1) {\n      this.createRandomLine(x1, y1, middleXBefore, middleYBefore, division - 1, varX, varY);\n      this.createRandomLine(middleXAfter, middleYAfter, x2, y2, division - 1, varX, varY);\n    } else {\n      this.createLine(x1,y1, middleXBefore, middleYBefore);\n      this.createLine(middleXAfter, middleYAfter, x2, y2);\n    }\n  }\n\n  createLineByTile(x1, y1, nbTilesX, nbTilesY, division, varX, varY) {\n    if(nbTilesX < 0 ) {\n      throw `createLineByTile ${nbTilesX} is negative`;\n    }\n    if(nbTilesY < 0 ) {\n      throw `createLineByTile ${nbTilesY} is negative`;\n    }\n    this.createRandomLine(x1, y1, (nbTilesX-1) * SpriteWidth + x1 , (nbTilesY-1) * SpriteHeight + y1, division, varX, varY);\n  }\n\n  // //Brasenhem algorithm\n  createLine(x1,y1, x2, y2) {\n    const dx = Math.abs(x2 - x1);\n    const sx = x1 < x2 ? SpriteWidth : -SpriteWidth;\n    const dy = Math.abs(y2 - y1);\n    const sy = y1 < y2 ? SpriteHeight : -SpriteHeight;\n    var err = (dx > dy ? dx : -dy) / 2;\n\n    let x = x1;\n    let y = y1;\n    while (true) {\n      this.createSprite(x,y);\n      if (x >= x2 && y >= y2) break;\n      if(x < 0 || y < 0 || x > this.Bounds.width || y > this.Bounds.height) break;\n      let e2 = err;\n      if (e2 > - dx) {\n        err -= dy;\n        x += sx;\n      }\n      if (e2 < dy) {\n        err += dx;\n        y += sy;\n      }\n    }\n  }\n\n  createSprite(x,y) {\n    let sprite = this.create(x, y, Wall);\n    sprite.scale.setTo(SpriteRatioX, SpriteRatioY);\n    sprite.body.immovable = true;\n  }\n\n  createBackground(x, y) {\n    //put in another group i think\n    let sprite = this.create(x,y, BoomerangSprite);\n    sprite.body.immovable = true;\n  }\n\n  ////\n  // (x,y) ####\n  //       #  #\n  //       #  #\n  //       #  #\n  //       ####\n  //\n  ///\n  createSquare(x, y, nbTilesBySide) {\n    this.createRandomSquare(x, y, nbTilesBySide, 1, false);\n  }\n\n  createRandomSquare(x, y, nbTilesBySide, division = 3, random = true) {\n    const updateVariation = () => {\n      const maxOffset = nbTilesBySide/ Divisor;\n      if(random) {\n        return [getRandomArbitrary(-maxOffset, maxOffset), getRandomArbitrary(-maxOffset, maxOffset), getRandomArbitrary(-maxOffset, maxOffset), getRandomArbitrary(-maxOffset, maxOffset)];\n      }\n      return [0, 0, 0, 0];\n    };\n\n    let varX = 0;\n    let varY = 0;\n    let varX2 = 0;\n    let varY2 = 0;\n\n    [varX, varY, varX2, varY2] = updateVariation();\n    this.createLineByTile(x, y, nbTilesBySide, 1, division, varX, varY);\n    this.createLineByTile(x, y + (nbTilesBySide-1) * SpriteHeight, nbTilesBySide, 1, division, varX2, varY2);\n\n    [varX, varY, varX2, varY2] = updateVariation();\n    //nbtiles - 2 because corner  was drawn  by vertical line\n    this.createLineByTile(x, y + SpriteHeight, 1, nbTilesBySide - 2, division, varX, varY);\n    this.createLineByTile(x + (nbTilesBySide-1) * SpriteWidth, y + SpriteHeight, 1, nbTilesBySide - 2, division, varX2, varY2);\n  }\n\n\n  clear() {\n    this.children.forEach(tile => {\n      this.remove(tile);\n    });\n  }\n\n  getRoomBordered() {\n    return this.children;\n  }\n}\n\nexport default Room;",
    "class Commands extends Phaser.State {\n\n  create() {\n    this.game.add.text(300, 100, \"Instructions\", { font: \"bold 33px Arial\", fill: '#43d637', stroke: '#4D4D4D',strokeThickness: 6 });\n    this.game.add.text(150, 180, \"Kill all the zombies or leave the room\", { font: \"bold 28px Arial\", fill: \"#fff\", stroke: '#4D4D4D',strokeThickness: 3 });\n    \n    this.game.add.text(300, 300, \"Commands\", { font: \"bold 28px Arial\", fill: \"#FF3333\", stroke: '#4D4D4D',strokeThickness: 3 });\n\n    this.game.add.text(30, 350, \"Move\", { font: \"bold 28px Arial\", fill: \"#fff\" });\n    this.game.add.text(350, 350, \"Arrows keys\", { font: \"bold 28px Arial\", fill: \"#fff\" });\n    \n    this.game.add.text(30, 400, \"Shoot\", { font: \"bold 28px Arial\", fill: \"#fff\" });\n    this.game.add.text(350, 400, \"Left mouse button / Space\", { font: \"bold 28px Arial\", fill: \"#fff\" });\n    \n    this.game.add.text(30, 450, \"Throw boomerang\", { font: \"bold 28px Arial\", fill: \"#fff\" });\n    this.game.add.text(350, 450, \"B + Arrows keys\", { font: \"bold 28px Arial\", fill: \"#fff\" });\n   \n\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n  }\n\n  update() {\n    if(this.enterButton.isDown) {\n      this.game.goToGame();\n    }\n  }\n\n}\n\nexport default Commands;\n",
    "import { getRandomArbitrary } from \"utils\";\nimport {\n  Wall,\n  SpritePlayer,\n  SpriteEnemy,\n  SpriteEnemy2,\n  SpriteEnemy3,\n  SpriteBullet,\n  BoomerangSprite,\n  DeathSound,\n  Background,\n  LightSprite\n} from \"SpriteConstants\";\nimport {\n  CameraVelocity,\n  FlashColor,\n  FlashDuration,\n  ShakeIntensity,\n  ShakeDuration,\n  SpriteWidth,\n  SpriteHeight,\n  EnemyWidth,\n  EnemyHeight,\n  Border,\n  CharacterWitdh,\n  CharacterHeight,\n  BoomerangWidth,\n  BoomerangHeight\n  } from \"Constants\";\n\nimport Player from \"objects/Character\";\nimport Boomerang from \"objects/Boomerang\";\nimport Room from \"objects/Room\";\nimport BackgroundLayer from \"objects/BackgroundLayer\";\nimport EnemyGroup from \"objects/EnemyGroup\";\nimport ChandelierLayer from \"objects/ChandelierLayer\";\n\n\nconst needCamera = false;\n\nconst MinDivision = 1;\nconst MaxDivision = 5;\n\nconst Division = getRandomArbitrary(MinDivision, MaxDivision);\n\nconst MaxBorder = 60;\nconst MinBorder = 30;\n\nconst SizeMaze = getRandomArbitrary(MinBorder, MaxBorder);\n// assuming SpriteWidth = SpriteHeight\nconst Bounds = 2 * Border + SizeMaze * SpriteWidth;\n\n\nclass Game extends Phaser.State {\n\n  create() {\n    this.game.stage.backgroundColor = 0x000000;\n    this.game.world.setBounds(0, 0, Bounds, Bounds);\n    this.room = new Room(this.game);\n    this.room.createRandomSquare(Border,Border,SizeMaze, Division);\n\n    this.hero = new Player(this.game, 100, 100);\n    this.game.add.existing(this.hero);\n    this.getInitialPosition(this.hero, CharacterWitdh, CharacterHeight);\n\n    //this.bgLayer = new BackgroundLayer(this.game, this.hero.x, this.hero.y, this.room.getRoomBordered());\n    \n    this.boomerang = new Boomerang(this.game, 0, 0);\n    this.getInitialPosition(this.boomerang, BoomerangWidth, BoomerangHeight);\n    this.game.add.existing(this.boomerang);\n\n    this.enemies = new EnemyGroup(this.game);\n    this.chandelierLayer = new ChandelierLayer(this.game);\n\n    if(needCamera) {\n      this.cursors = this.game.input.keyboard.createCursorKeys();\n    }\n    this.camera.follow(this.hero);\n    this.launchBoomerangKey = this.game.input.keyboard.addKey(Phaser.Keyboard.B);\n\n    //sounds\n    this.deathFx = this.game.add.audio(DeathSound);\n\n  }\n\n  getInitialPosition(sprite, spriteWidth, spriteHeight) {\n    let maxAttempt = 0;\n    let hasBlock = false;\n    do {\n      const x = getRandomArbitrary(2 * Border, this.game.world.bounds.width - spriteWidth - 2 * Border);\n      const y = getRandomArbitrary(2 * Border, this.game.world.bounds.height - spriteHeight - 2 * Border);\n      sprite.position.setTo(x,y);\n      maxAttempt = maxAttempt + 1;\n      hasBlock = this.game.physics.arcade.collide(sprite, this.room);\n    } while(maxAttempt < 10 && hasBlock);\n  }\n\n  update() {\n    this.game.physics.arcade.overlap(this.hero, this.enemies, this.damage, null, this);\n    this.game.physics.arcade.overlap(this.hero.bullets(), this.enemies, this.kill, null, this);\n    this.game.physics.arcade.overlap(this.enemies, this.room, this.pushBlock, null, this);\n\n    this.game.physics.arcade.collide(this.enemies);\n    this.game.physics.arcade.collide(this.hero.bullets(), this.room, this.killBullet);\n    this.game.physics.arcade.collide(this.enemies, this.boomerang, this.killByBoomerang, null, this);\n    this.game.physics.arcade.collide(this.hero, this.room);\n    this.game.physics.arcade.collide(this.boomerang, this.room, this.killBoomerang, null, this);\n    this.game.physics.arcade.overlap(this.hero, this.boomerang, this.launchBoomerang, null, this);\n    this.enemies.follow(this.hero.body.position);\n\n    if(this.hero.isDeath()) {\n      this.lost();\n    }\n\n     if(this.hero.isOutSideTheLevel(this.game) || !this.enemies.hasEnemies()) {\n        this.won();\n     }\n  }\n\n  kill(bullet, enemy) {\n    this.enemies.remove(enemy);\n    bullet.kill();\n  }\n\n  killBullet(bullet) {\n    bullet.kill();\n  }\n\n  killByBoomerang(boomerang, enemy) {\n    if(boomerang.isMoving()) {\n      this.enemies.remove(enemy);\n    }\n  }\n\n  killBoomerang(boomerang) {\n    boomerang.kill();\n  }\n\n  damage() {\n    this.hero.damage();\n    this.camera.flash(FlashColor, FlashDuration);\n  }\n\n  pushBlock(enemy, block) {\n    this.game.camera.shake(ShakeIntensity, ShakeDuration);\n    const enemyLeft = enemy.body.position.x;\n    const enemyRight = enemy.body.position.x + EnemyWidth;\n    const enemyTop = enemy.body.position.y - EnemyHeight;\n    const enemyBottom = enemy.body.position.y;\n\n    const blockLeft = block.body.position.x;\n    const blockRight = block.body.position.x + SpriteWidth;\n    const blockTop = block.body.position.y - SpriteHeight;\n    const blockBottom = block.body.position.y;\n\n    const bigValue = 1000;\n    let left = bigValue\n    let right = bigValue;\n    let up = bigValue;\n    let down = bigValue;\n\n    if( enemyLeft < blockLeft &&\n        blockLeft < enemyRight &&\n        enemyRight < blockRight\n      ) {\n      left = enemyRight - blockLeft;\n    }\n\n    if( blockLeft < enemyLeft &&\n        enemyLeft < blockRight &&\n        blockRight < enemyRight\n     ) {\n      right = blockRight - enemyLeft;\n    }\n\n    if( enemyTop < blockTop &&\n        blockTop < enemyBottom &&\n        enemyBottom < blockBottom\n      ) {\n      up = enemyBottom - blockTop;\n    }\n\n    if( blockTop < enemyTop &&\n        enemyTop < blockBottom &&\n        blockBottom < enemyBottom\n    ) {\n      down = blockBottom - enemyTop;\n    }\n\n    if(left < right && left < up  &&  left < down ) {\n       block.body.position.x += 1;\n    } else if( right < left && right < up  &&  right < down ) {\n      block.body.position.x -= 1;\n    } else if( up < down && up < left && up < right) {\n      block.body.position.y += 1;\n    } else if (down < up && down < left && down < right) {\n      block.body.position.y -= 1;\n    }\n\n  }\n\n  launchBoomerang() {\n    if(this.launchBoomerangKey.isDown) {\n      // after the tween get back to the player\n      const onCompleteCallback = (boomerang, tween) => {\n         boomerang.kill();\n         tween.stop()\n      };\n      // the first param is the direction\n      this.boomerang.launch(this.hero.directionChoosed(), onCompleteCallback);\n    }\n  }\n\n  lost() {\n    this.hero.kill();\n    this.deathFx.play();\n     setTimeout(() => {\n       this.room.clear();\n       this.chandelierLayer.clear();\n       this.boomerang.kill();\n       this.game.goToLose();\n     }, 500);\n  }\n\n  won() {\n    this.game.goToWin();\n  }\n\n  preload() {\n    this.game.load.image(Wall, \"res/block.png\");\n    this.game.load.spritesheet(SpritePlayer, \"res/hero-sprite.png\", CharacterWitdh, CharacterHeight);\n    this.game.load.spritesheet(SpriteEnemy, \"res/zombie.png\", EnemyWidth, EnemyHeight);\n    this.game.load.spritesheet(SpriteEnemy2, \"res/zombie2.png\", EnemyWidth, EnemyHeight);\n    this.game.load.spritesheet(SpriteEnemy3, \"res/zombie1.png\", EnemyWidth, EnemyHeight);\n    this.game.load.image(SpriteBullet, \"res/bullet.png\");\n    this.game.load.image(BoomerangSprite, \"res/ufoRed.png\");\n    this.game.load.image(Background, \"res/boomerang.png\");\n    this.game.load.image(LightSprite, \"res/light.png\");\n    this.game.load.audio(DeathSound, 'res/painSoundBible.com.mp3');\n  }\n\n  render() {\n    //this.enemies.render(this.game);\n    //this.game.debug.spriteInfo(this.hero, 32, 32);\n    //this.game.debug.text(Bounds, 2, 14, \"#ff0000\");\n    //this.game.debug.spriteInfo(this.hero, 32, 32);\n  }\n\n  moveCamera() {\n    if(needCamera) {\n      if (this.cursors.up.isDown)\n      {\n        this.game.camera.y -= CameraVelocity;\n      }\n      else if (this.cursors.down.isDown)\n      {\n        this.game.camera.y += CameraVelocity;\n      }\n\n      if (this.cursors.left.isDown)\n      {\n        this.game.camera.x -= CameraVelocity;\n      }\n      else if (this.cursors.right.isDown)\n      {\n        this.game.camera.x += CameraVelocity;\n      }\n    }\n  }\n\n\n}\n\nexport default Game;\n",
    "class LoseState extends Phaser.State {\n\n  create() {\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n    this.game.add.text(325, 150, \"You lose \", { font: \"bold 40px Arial\", fill: \"#fff\" });\n    this.game.add.text(160, 350, \"Press enter to play again \", { font: \"bold 40px Arial\", fill: \"#fff\" });\n    this.game.stage.backgroundColor = \"#e54424\";\n  }\n\n\n  update() {\n    if(this.enterButton.isDown) {\n      this.game.goToGame();\n    }\n  }\n\n}\n\nexport default LoseState;\n",
    "\nclass Menu extends Phaser.State {\n\n  create() {\n    this.game.add.sprite(175,100, \"LD\");\n    this.game.add.text(230, 230, \"Press enter to start\", { font: \"bold 34px Arial\", fill: \"#fff\" });\n    this.game.add.text(280, 350, \"Thanks for playing ! :)\", { font: \"bold 19px Arial\", fill: \"#fff\" })\n    this.game.add.text(200, 400, \"Compo during LD37 in December 2016\", { font: \"bold 19px Arial\", fill: \"#fff\" });\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n  }\n\n  preload() {\n    this.game.load.image(\"LD\", \"res/LD.png\");\n  }\n\n  update() {\n    if(this.enterButton.isDown) {\n      this.game.goToCommands();\n    }\n  }\n\n}\n\nexport default Menu;\n",
    "class WinState extends Phaser.State {\n\n  create() {\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n    this.game.add.text(315, 150, \"You win \", { font: \"bold 40px Arial\", fill: \"#fff\" });\n    this.game.add.text(160, 350, \"Press enter to play again \", { font: \"bold 40px Arial\", fill: \"#fff\" });\n    this.game.stage.backgroundColor = \"#2aaa11\";\n  }\n\n\n  update() {\n    if(this.enterButton.isDown) {\n      this.game.goToGame();\n    }\n  }\n\n}\n\nexport default WinState;\n",
    "export function getRandomArbitrary(min, max) {\n    return Math.trunc(Math.random() * (max - min) + min);\n}\n"
  ]
}